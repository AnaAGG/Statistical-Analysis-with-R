library(sp)
library(raster)
library(rgdal)
library(dismo)
library(rJava)
presences<- read.table("clipboard", header=TRUE, sep="\t")
head(presences)
presences <- presences[,2:3]
head(presences)
#Para darle a las coordenas un sistema de referencia
coordinates(presences) <- ~Longitude+Latitude
presences<- read.table("clipboard", header=TRUE, sep="\t")
head(presences)
presences <- presences[,2:3]
head(presences)
#Para darle a las coordenas un sistema de referencia
coordinates(presences) <- ~Longitude+Latitude
projection(presences) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0')
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/nitr_min_lt.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/cloud_min_ant.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/icecov_max_lt.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sal_min_lt.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sst_max_lt.asc")
sstmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sst_min_lt.asc")
tairmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/tair_max.asc")
tairmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/tair_min.asc")
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/wave_max.asc")
varamb <- c(nitrmin, cloudmin, icecovmax, salmin, sstmax, sstmin, tairmax, tairmin, wavemax)
predictors <- stack(varamb)
crs(predictors) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" #Para darle una extension geografica a mi RasterStack
predictors
plot(predictors)# Para plotear todas las variables predictoras
#Ahora podemos plotear las presecias con las variables. Si lo hacemos de uno en una:
plot(predictors, 1) #Al poner el 1 estoy ploteando ad_max (es la primera en nuestra lista)
points(presences, col='blue') # para añadir los datos de presencia
#Para extraer la informacion de los raster de cada una de nuestras presencias:
presvals <- extract(predictors, presences)
presvals
library(devtools)
library(backports)
write.csv(presvals, "Occurrences vs Rasters.csv")
library(devtools)
library(backports)
library(ecospat)
library(dismo)
library(ENMTools)
#Correlacion de Spearman
corspearman <- cor(presvals, method = "spearman")
#Ahora vamos a generar un nuevo fichero con un background de 250
set.seed(0)
backgr <- randomPoints(predictors, 500)
absvals <- extract(predictors, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
pb <- c(rep(1, nrow(presvals)), rep(0, nrow(absvals)))  # creamos un nuevo objeto donde vamos a juntar nuestros datos de presencia con los del background
sdmdata <- data.frame(cbind(pb, rbind(presvals, absvals)))
head(sdmdata)
write.csv(sdmdata, "Presence/Absence Data")
write.csv(sdmdata, "Presence/Absence Data.csv")
sdmdata <- data.frame(cbind(pb, rbind(presvals, absvals)))
head(sdmdata)
write.csv(sdmdata, "Presence/Absence Data.csv")
library(MASS)
library(rpart)
library(MASS)
library(gbm)
library(splines2)
library(foreach)
library(gam)
library(nnet)
library(class)
library(mda)
library(randomForest)
#library(Design)
library(lattice)
library(survival)
library(Formula)
library(Rcpp)
library(rlang)
library(tibble)
library(ggplot2)
library(Hmisc)
library(reshape)
library(plyr)
library(parallel)
library(raster)
library(sp)
library(dismo)
library(rJava) #Si sale el siguiente error "Error: package or namespace load failed for 'rJava':.onLoad failed in loadNamespace() for 'rJava', details:call: fun(libname, pkgname)", el problema es que hay que instalar la version de 64bits de java, por defencto se instala la de 32. La pagina de donde podemos descargar la version correcta es: https://www.java.com/en/download/manual.jsp
library(biomod2)
envt.st <- stack(varamb)
presences<- read.table("clipboard", header=TRUE, sep="\t")
head(presences)
presences <- cbind(presences, rep.int(1, length(nrow(presences)))) # lo que hacemos con esto es añadir una columna indicando que son datos de presencia
colnames(presences) <- c("Name", "Longitude", "Latitude", "Response")
head(presences)
setwd("C:/Users/Ana G/OneDrive - Universidad Rey Juan Carlos/Predoctoral/DatosFucus/Modelos/ModeloFucus/R/RastersPresente/Presente/ParaR/ExplicativeVariables")
envtList <- list.files(pattern = ".asc")
#Configuración de archivo de datos para Biomod2
bmData<- BIOMOD_FormatingData(resp.var = presences[,4],
resp.xy = presences[,2:3],
resp.name = as.character(presences[1,1]),
expl.var = envt.st,
PA.nb.rep = 1) #Mirar que significaba esto
presvals <- extract(envt.st, presences)
#Corremos BIOMOD
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
presvals <- extract(envt.st, presences)
write.csv(presvals, "DataSpecies")
write.csv(presvals, "DataSpecies.csv")
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
myRespName <- 'F.serratus'
#Corremos BIOMOD
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
head(presences)
presvals <- extract(envt.st, presences)
head(presvals)
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
backgr <- randomPoints(predictors, 500)
absvals <- extract(predictors, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
backgr <- randomPoints(predictors, 500)
absvals <- extract(predictors, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
head(absvals)
head(backgr)
write.csv(absvals, "Pseudoabsence Rasters")
write.csv(absvals, "Pseudoabsence Rasters.csv")
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- cbind(presences, rep.int(1, length(nrow(presences)))) # lo que hacemos con esto es añadir una columna indicando que son datos de presencia
colnames(presences) <- c("Name", "Longitude", "Latitude", "Response")
head(presences)
presvals <- extract(envt.st, presences)
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/nitr_min_lt.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/cloud_min_ant.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/icecov_max_lt.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sal_min_lt.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sst_max_lt.asc")
sstmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/sst_min_lt.asc")
tairmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/tair_max.asc")
tairmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/tair_min.asc")
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Nuevas capas latitudinal con Lts/wave_max.asc")
varamb <- c(nitrmin, cloudmin, icecovmax, salmin, sstmax, sstmin, tairmax, tairmin, wavemax)
envt.st <- stack(varamb)
crs(predictors) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" #Para darle una extension geografica a mi RasterStack
predictors
crs(envt.st) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" #Para darle una extension geografica a mi RasterStack
envt.st
plot(envt.st)# Para plotear todas las variables predictoras
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3] #NO CORRER ESTO PARA BIOMOD
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
head(presences)
presvals <- extract(envt.st, presences)
presences <- presences[,2:3]
head(presences)
presvals <- extract(envt.st, presences)
head(presvals)
write.csv(presvals, "DataSpecies.csv")
presences <- cbind(presvals, rep.int(1, length(nrow(presences)))) # lo que hacemos con esto es añadir una columna indicando que son datos de presencia
colnames(presences) <- c("Name", "Longitude", "Latitude", "Response")
colnames(presences) <- c("Longitude", "Latitude", "Response")
head(presences)
write.csv(presences, "DataSpecies.csv")
#Ahora vamos a generar un nuevo fichero con un background de 500
set.seed(0)
backgr <- randomPoints(predictors, 500)
absvals <- extract(predictors, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
backgr <- randomPoints(envt.st, 500)
absvals <- extract(envt.st, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
head(absvals)
head(backgr)
write.csv(absvals, "Pseudoabsence Rasters.csv")
write.csv(backgr, "Pseudoabsence Rasters.csv")
pb <- c(rep(1, nrow(DataSpecies)), rep(0, nrow(absvals)))  # creamos un nuevo objeto donde vamos a juntar nuestros datos de presencia con los del background
DataSpecies <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia con a variables ambientales
DataSpecies <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia con a variables ambientales
pb <- c(rep(1, nrow(DataSpecies)), rep(0, nrow(absvals)))  # creamos un nuevo objeto donde vamos a juntar nuestros datos de presencia con los del background
sdmdata <- data.frame(cbind(pb, rbind(presvals, absvals)))
head(sdmdata)
head(pb)
sdmdata <- data.frame(cbind(pb, rbind(presvals, absvals))) # creamos un nuevo objeto donde vamos a juntar nuestros datos de presencia con los del background
head(sdmdata)
write.csv(absvals, "Pseudoabsence Rasters.csv")
write.csv(backgr, "Pseudoabsence Values")
write.csv(backgr, "Pseudoabsence Values.csv")
#Una vez que tenemos el set de datos preparados
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
myRespName <- 'F.serratus'
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
#os datos de presencia/ausencia
myResp <- as.numeric(DataSpecies[,1])
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 600,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodOptions <- BIOMOD_ModelingOptions(GLM =list( type = 'simple',interaction.level = 0,
myFormula = NULL, test = 'BIC', family = 'binomial',
control = glm.control(epsilon = 1e-08, maxit = 1000,
trace = FALSE)))
myBiomodOptions
myBiomodModelOut <- BIOMOD_Modeling(
myBiomodData,
models = c('GLM'),  #########, 'GAM' ######
models.options = myBiomodOptions,
NbRunEval=10,
DataSplit=70,
VarImport=3,
models.eval.meth = c('KAPPA','TSS','ROC', 'ACCURACY'),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = TRUE,
modeling.id = paste(myRespName,"FirstModeling",sep=""))
myBiomodModelOut
myGLMs<-BIOMOD_LoadModels(myBiomodModelOut)
ls()
myGLMs
get_formal_model(F.serratus_PA1_Full_GLM)
summary(F.serratus_PA1_Full_GLM@model)
myRespPlot2D <- response.plot2(models = myGLMs, Data = get_formal_data(myBiomodModelOut,'expl.var'),show.variables= get_formal_data(myBiomodModelOut,'expl.var.names'),do.bivariate = FALSE,fixed.var.metric = 'median',col = c("blue", "red"),legend = TRUE,data_species = get_formal_data(myBiomodModelOut,'resp.var'))
# get all models evaluation
myBiomodModelEval <- get_evaluations(myBiomodModelOut)
myBiomodModelEval
# print the dimnames of this object
dimnames(myBiomodModelEval)
# let's print the TSS scores of all selected models   #--TSS y ROC evaluan poder predictivo del modelo
myBiomodModelEval["TSS","Testing.data",,,]
# let's print the ROC scores of all selected models
myBiomodModelEval["ROC","Testing.data",,,]
# print variable importances
get_variables_importance(myBiomodModelOut)
#Ahora vamos a generar un nuevo fichero con un background de 500
set.seed(0)
backgr <- randomPoints(envt.st, 1000)
absvals <- extract(envt.st, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
write.csv(absvals, "Pseudoabsence Rasters_1000.csv")
write.csv(backgr, "Pseudoabsence Values_1000.csv")
#Una vez que tenemos el set de datos preparados
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
myRespName <- 'F.serratus'
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
#os datos de presencia/ausencia
myResp <- as.numeric(DataSpecies[,1])
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 600,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodOptions <- BIOMOD_ModelingOptions(GLM =list( type = 'simple',interaction.level = 0,
myFormula = NULL, test = 'BIC', family = 'binomial',
control = glm.control(epsilon = 1e-08, maxit = 1000,
trace = FALSE)))
myBiomodOptions
myBiomodModelOut <- BIOMOD_Modeling(
myBiomodData,
models = c('GLM'),  #########, 'GAM' ######
models.options = myBiomodOptions,
NbRunEval=10,
DataSplit=70,
VarImport=3,
models.eval.meth = c('KAPPA','TSS','ROC', 'ACCURACY'),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = TRUE,
modeling.id = paste(myRespName,"FirstModeling",sep=""))
myBiomodModelOut
myGLMs<-BIOMOD_LoadModels(myBiomodModelOut)
ls()
get_formal_model(F.serratus_PA1_Full_GLM)
summary(F.serratus_PA1_Full_GLM@model)
myRespPlot2D <- response.plot2(models = myGLMs, Data = get_formal_data(myBiomodModelOut,'expl.var'),show.variables= get_formal_data(myBiomodModelOut,'expl.var.names'),do.bivariate = FALSE,fixed.var.metric = 'median',col = c("blue", "red"),legend = TRUE,data_species = get_formal_data(myBiomodModelOut,'resp.var'))
# get all models evaluation
myBiomodModelEval <- get_evaluations(myBiomodModelOut)
myBiomodModelEval
backgr <- randomPoints(envt.st, 15000)
head(backgr)
absvals <- extract(envt.st, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
write.csv(backgr, "Pseudoabsence Values_15000.csv")
write.csv(absvals, "Pseudoabsence Rasters_15000.csv")
#Una vez que tenemos el set de datos preparados
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
myRespName <- 'F.serratus'
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
#os datos de presencia/ausencia
myResp <- as.numeric(DataSpecies[,1])
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 600,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodOptions <- BIOMOD_ModelingOptions(GLM =list( type = 'simple',interaction.level = 0,
myFormula = NULL, test = 'BIC', family = 'binomial',
control = glm.control(epsilon = 1e-08, maxit = 1000,
trace = FALSE)))
myBiomodOptions
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 10000,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 8234,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodOptions <- BIOMOD_ModelingOptions(GLM =list( type = 'simple',interaction.level = 0,
myFormula = NULL, test = 'BIC', family = 'binomial',
control = glm.control(epsilon = 1e-08, maxit = 1000,
trace = FALSE)))
myBiomodOptions
myBiomodModelOut <- BIOMOD_Modeling(
myBiomodData,
models = c('GLM'),  #########, 'GAM' ######
models.options = myBiomodOptions,
NbRunEval=10,
DataSplit=70,
VarImport=3,
models.eval.meth = c('KAPPA','TSS','ROC', 'ACCURACY'),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = TRUE,
modeling.id = paste(myRespName,"FirstModeling",sep=""))
# get all models evaluation
myBiomodModelEval <- get_evaluations(myBiomodModelOut)
myBiomodModelEval
# print variable importances
get_variables_importance(myBiomodModelOut)
length(values(sstmax)[!is.na(values(sstmax))])
# print the dimnames of this object
dimnames(myBiomodModelEval)
# print variable importances
get_variables_importance(myBiomodModelOut)
myGLMs<-BIOMOD_LoadModels(myBiomodModelOut)
ls()
get_formal_model(F.serratus_PA1_Full_GLM)
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
head(presences)
#Variables ambientales:
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/nitr_min_lt.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/cloud_min_ant.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/cloud_min_antigua.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/icecov_max_lt.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/icecov_lt_max.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sal_min_lt.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sst_max_lt.asc")
sstmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sst_min_lt.asc")
tairmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/tair_max.asc")
tairmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/tair_min.asc")
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/wave_max.asc")
varamb <- c(nitrmin, cloudmin, icecovmax, salmin, sstmax, sstmin, tairmax, tairmin, wavemax)
envt.st <- stack(varamb)
crs(envt.st) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" #Para darle una extension geografica a mi RasterStack
envt.st
plot(envt.st)# Para plotear todas las variables predictoras
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
head(presences)
presvals <- extract(envt.st, presences)
head(presvals)
coordinates(presences) <- ~Longitude+Latitude
projection(presences) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0')
presences <- presences[,2:3]
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
coordinates(presences) <- ~Longitude+Latitude
projection(presences) <- CRS('+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0')
presences <- presences[,2:3]
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
coordinates(presences) <- ~Longitude+Latitude
presences <- presences[,2:3]
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
head(presences)
wavemax
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/wave_max.asc")
wavemax
#Variables ambientales:
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/nitr_min_lt.asc")
nitrmin
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/cloud_min_antigua.asc")
cloudmin
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/icecov_lt_max.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sal_min_lt.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sst_max_lt.asc")
sstmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/sst_min_lt.asc")
tairmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/tair_max.asc")
tairmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/tair_min.asc")
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/wave_max.asc")
varamb <- c(nitrmin, cloudmin, icecovmax, salmin, sstmax, sstmin, tairmax, tairmin, wavemax)
envt.st <- stack(varamb)
crs(envt.st) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0" #Para darle una extension geografica a mi RasterStack
envt.st
presvals <- extract(envt.st, presences)
head(presvals)
#Ahora podemos plotear las presecias con las variables. Si lo hacemos de uno en una:
plot(predictors, 1) #Al poner el 1 estoy ploteando ad_max (es la primera en nuestra lista)
presences
presences <- read.table("clipboard", header=TRUE, sep="\t") #DAtos de presencia
presences <- presences[,2:3]
head(presences)
presvals <- extract(envt.st, presences)
head(presvals)
write.csv(presvals, "DataSpecies.csv")
write.csv(presvals, "DataSpeciesSur.csv")
#Ahora vamos a generar un nuevo fichero con un background de 500
set.seed(0)
backgr <- randomPoints(envt.st, 150)
absvals <- extract(envt.st, backgr) # nos da los valores de los predictores para los 500 puntos de background que hemos generado
head(absvals)
head(backgr)
write.csv(absvals, "Pseudoabsence Rasters_15000.csv")
write.csv(backgr, "Pseudoabsence Values_15000.csv")
write.csv(absvals, "Pseudoabsence Rasters_150_Sur.csv")
write.csv(backgr, "Pseudoabsence Values_150_Sur.csv")
#Una vez que tenemos el set de datos preparados
DataSpecies<- read.table("clipboard", header=TRUE, sep="\t")
head(DataSpecies)
myRespName <- 'F.serratus'
#Las coordenas x e y
myRespXY <- DataSpecies[,2:3]
#os datos de presencia/ausencia
myResp <- as.numeric(DataSpecies[,1])
myBiomodData<- BIOMOD_FormatingData(myResp, envt.st, myRespXY, myRespName,PA.nb.rep = 1,
PA.nb.absences = 150,
PA.strategy = 'random',
PA.dist.min = 0.2,
PA.dist.max = NULL,
PA.sre.quant = 0.025,
PA.table = NULL,
na.rm = TRUE)
myBiomodOptions <- BIOMOD_ModelingOptions(GLM =list( type = 'simple',interaction.level = 0,
myFormula = NULL, test = 'BIC', family = 'binomial',
control = glm.control(epsilon = 1e-08, maxit = 1000,
trace = FALSE)))
myBiomodOptions
myBiomodModelOut <- BIOMOD_Modeling(
myBiomodData,
models = c('GLM'),  #########, 'GAM' ######
models.options = myBiomodOptions,
NbRunEval=10,
DataSplit=70,
VarImport=3,
models.eval.meth = c('KAPPA','TSS','ROC', 'ACCURACY'),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = TRUE,
modeling.id = paste(myRespName,"FirstModeling",sep=""))
myBiomodModelOut
myGLMs<-BIOMOD_LoadModels(myBiomodModelOut)
ls()
get_formal_model(F.serratus_PA1_Full_GLM)
summary(F.serratus_PA1_Full_GLM@model)
myRespPlot2D <- response.plot2(models = myGLMs, Data = get_formal_data(myBiomodModelOut,'expl.var'),show.variables= get_formal_data(myBiomodModelOut,'expl.var.names'),do.bivariate = FALSE,fixed.var.metric = 'median',col = c("blue", "red"),legend = TRUE,data_species = get_formal_data(myBiomodModelOut,'resp.var'))
# get all models evaluation
myBiomodModelEval <- get_evaluations(myBiomodModelOut)
myBiomodModelEval
# print the dimnames of this object
dimnames(myBiomodModelEval)
# let's print the TSS scores of all selected models   #--TSS y ROC evaluan poder predictivo del modelo
myBiomodModelEval["TSS","Testing.data",,,]
# let's print the ROC scores of all selected models
myBiomodModelEval["ROC","Testing.data",,,]
# print variable importances
get_variables_importance(myBiomodModelOut)
#Variables ambientales:
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/nitr_min_lt.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Sur/Variables/cloud_min_antigua.asc")
#Variables ambientales:
#Para meter los raster en R
nitrmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/Nitr_LTmin.asc")
cloudmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/cloud_min_antigua.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/icecov_lt_max.asc")
icecovmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/IceCov_LTmax.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/sal_min_lt.asc")
salmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/Sal_LTmin.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/sst_max_lt.asc")
sstmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/SST_LTmax.asc")
sstmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/SST_LTmin.asc")
tairmax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/tair_max.asc")
tairmin <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/tair_min.asc")
wavemax <- raster ("C:/Users/Ana G/Desktop/Modelos BIOMOD/Norte/Variables/wave_max.asc")
